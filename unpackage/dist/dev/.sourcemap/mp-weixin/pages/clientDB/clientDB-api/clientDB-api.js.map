{"version":3,"file":"clientDB-api.js","sources":["pages/clientDB/clientDB-api/clientDB-api.vue","D:/ruanjian/HBuilderX.3.6.18.20230117/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2xpZW50REIvY2xpZW50REItYXBpL2NsaWVudERCLWFwaS52dWU"],"sourcesContent":["<template>\r\n\t<view>\r\n\t\t<alertCode ref=\"alertCode\"></alertCode>\r\n\r\n\t\t<view class=\"tips\">\r\n\t\t\t<view>schema配置详见uniCloud-aliyun/database下的book.schema.json、order.schema.json</view>\r\n\t\t</view>\r\n\r\n\t\t<uni-section title=\"简单查询\" subTitle=\"在符合schema设置的前提下,直接在前端查询云端数据库的数据\" type=\"line\"></uni-section>\r\n\t\t<button @click=\"getData('book')\" plain type=\"primary\">查图书book表的数据</button>\r\n\t\t<button @click=\"getData('order')\" plain type=\"primary\">查订单order表的数据</button>\r\n\r\n\t\t<uni-section title=\"查询列表分页\" subTitle=\"设置每页查询数量和页码查询\" type=\"line\"></uni-section>\r\n\t\t<view class=\"item\">\r\n\t\t\t<text>页码：</text>\r\n\t\t\t<uni-number-box class=\"num-box1\" :min=\"1\" @change=\"pageCurrent = $event/1\" :value=\"pageCurrent\">\r\n\t\t\t</uni-number-box>\r\n\t\t</view>\r\n\t\t<view class=\"item\">\r\n\t\t\t<text>每页查询数量：</text>\r\n\t\t\t<uni-number-box class=\"num-box2\" :min=\"1\" @change=\"pageSize = $event/1\"\r\n\t\t\t\t:value=\"pageSize\"></uni-number-box>\r\n\t\t</view>\r\n\t\t<button @click=\"getPageData('order')\" plain type=\"primary\">分页查图书book表的数据</button>\r\n\r\n\t\t<uni-section title=\"联表查询-订单和图书\" subTitle=\"只需在db schema中，将两个表的关联字段建立映射关系，即可实现联表查询。\" type=\"line\">\r\n\t\t</uni-section>\r\n\t\t<button @click=\"getOrderByGetTemp\" plain type=\"primary\">数据表较大时，高性能查询</button>\r\n\t\t<button @click=\"getOrder\" plain type=\"primary\">数据表较小时，便捷查询</button>\r\n\r\n\t\t<uni-section title=\"getOne\" subTitle=\"使用clientDB时可以在get方法内传入getOne:true来返回一条数据\" type=\"line\"></uni-section>\r\n\t\t<button @click=\"getOneBook\" plain type=\"primary\">查询一本图书数据</button>\r\n\r\n\t\t<uni-section title=\"getCount\" subTitle=\"使用clientDB时可以在get方法内传入getCount:true来同时返回总数\" type=\"line\"></uni-section>\r\n\t\t<button @click=\"getBookHasCount\" plain type=\"primary\">查询结果返回总数</button>\r\n\r\n\t\t<uni-section title=\"field\" subTitle=\"查询时可以使用field方法指定返回字段，在<uni-clientDB>组件中也支持field属性。不使用field方法时会返回所有字段\"\r\n\t\t\ttype=\"line\"></uni-section>\r\n\t\t<button @click=\"getBookTitle\" plain type=\"primary\">仅查询图书数据的书名</button>\r\n\r\n\t\t<!-- <uni-section title=\"loadMore\" subTitle=\"查询列表分页\" type=\"line\"></uni-section>\r\n\t\t<button  @click=\"getUserData\" type=\"primary\">加载下一页</button>\r\n\t\t<button  @click=\"getUserData\" type=\"primary\">点击页码按钮切换不同页</button> -->\r\n\r\n\t\t<uni-section title=\"name as cname\" subTitle=\"如：author as book_author，意思是将数据库的author字段重命名为book_author\"\r\n\t\t\ttype=\"line\"></uni-section>\r\n\t\t<button @click=\"getBookAs\" plain type=\"primary\">获得被设置别名的数据</button>\r\n\r\n\t\t<uni-section title=\"orderBy\" subTitle=\"orderBy方法内可以传入一个字符串来指定排序规则。如:订单表order根据quantity销量字段排序\" type=\"line\">\r\n\t\t</uni-section>\r\n\t\t<button @click=\"getOrderOrderBy('quantity asc')\" type=\"primary\" plain>按销量升序</button>\r\n\t\t<button plain @click=\"getOrderOrderBy('create_date desc')\" type=\"primary\">按创建时间降序</button>\r\n\t\t<button plain @click=\"getOrderOrderBy('quantity asc, create_date desc')\" type=\"primary\">销量相同时，按创建时间降序</button>\r\n\r\n\t\t<uni-section title=\"查询树形数据\"\r\n\t\t\tsubTitle=\"树形数据，在数据库里一般不会按照tree的层次来存储，因为按tree结构通过json对象的方式存储不同层级的数据，不利于对tree上的某个节点单独做增删改查。一般存储树形数据，tree上的每个节点都是一条单独的数据表记录，然后通过类似parent_id来表达父子关系。如部门的数据表，里面有2条数据，一条数据记录是“总部”，parent_id为空；另一条数据记录“一级部门A”，parent_id为总部的_id\"\r\n\t\t\ttype=\"line\"></uni-section>\r\n\t\t<button plain @click=\"getTreeFn\" type=\"primary\">查询树形数据</button>\r\n\r\n\t\t<uni-section title=\"新增数据记录add\" subTitle=\"获取到db的表对象后，通过add方法新增数据记录\" type=\"line\"></uni-section>\r\n\t\t<button @click=\"addData2TestDb()\" plain type=\"primary\">\r\n\t\t\t<text>\r\n\t\t\t\t在test表里新增一条\r\n\t\t\t\t\"data=当前时间戳\"的记录\r\n\t\t\t</text>\r\n\t\t</button>\r\n\t\t<button @click=\"addMoreData2TestDb()\" plain type=\"primary\">\r\n\t\t\t<text>\r\n\t\t\t\t在test表里新增5条\r\n\t\t\t\t\"data=随机数\"的记录\r\n\t\t\t</text>\r\n\t\t</button>\r\n\r\n\t\t<uni-section title=\"更新数据记录update\" subTitle=\"collection.doc().update(Object data)\" type=\"line\"></uni-section>\r\n\t\t<button @click=\"updateData2TestDb()\" plain type=\"primary\">\r\n\t\t\t<text>\r\n\t\t\t\t更新test表里的一条记录\r\n\t\t\t</text>\r\n\t\t</button>\r\n\r\n\t\t<uni-section title=\"删除数据记录remove\" subTitle=\"获取到db的表对象，然后指定要删除的记录，通过remove方法删除。\" type=\"line\"></uni-section>\r\n\t\t<button @click=\"removeData2TestDb()\" plain type=\"primary\">\r\n\t\t\t<text>\r\n\t\t\t\t删除test表里的一条记录\r\n\t\t\t</text>\r\n\t\t</button>\r\n\t\t<button @click=\"removeAllData2TestDb()\" plain type=\"primary\">\r\n\t\t\t<text>\r\n\t\t\t\t删除test表里的所有数据\r\n\t\t\t</text>\r\n\t\t</button>\r\n\r\n\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\tconst db = uniCloud.database();\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tmsg: {\r\n\t\t\t\t\tresult: {\r\n\t\t\t\t\t\tdata: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpageCurrent: 1,\r\n\t\t\t\tpageSize: 2\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\taddMoreData2TestDb() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: false\r\n\t\t\t\t});\r\n\t\t\t\tlet dataList = [];\r\n\t\t\t\tfor (var i = 0; i < 5; i++) {\r\n\t\t\t\t\tdataList.push({\r\n\t\t\t\t\t\t\"data\": Math.ceil(Math.random() * 999)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tdb.collection('test').add(dataList).then(res => {\r\n\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\taddData2TestDb() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: false\r\n\t\t\t\t});\r\n\t\t\t\tdb.collection('test').add({\r\n\t\t\t\t\tdata: Date.now()\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tupdateData2TestDb() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: false\r\n\t\t\t\t});\r\n\t\t\t\tlet testDb = db.collection(\"test\")\r\n\t\t\t\ttestDb.get({\r\n\t\t\t\t\tgetOne: true\r\n\t\t\t\t}).then(({\r\n\t\t\t\t\tresult: {\r\n\t\t\t\t\t\tdata\r\n\t\t\t\t\t}\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\ttestDb.doc(data._id).update({\r\n\t\t\t\t\t\t\tdata: Date.now()\r\n\t\t\t\t\t\t}).then(res => {\r\n\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: 'test表内没有数据',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tremoveData2TestDb() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: false\r\n\t\t\t\t});\r\n\t\t\t\tlet testDb = db.collection(\"test\")\r\n\t\t\t\ttestDb.get({\r\n\t\t\t\t\tgetOne: true\r\n\t\t\t\t}).then(({\r\n\t\t\t\t\tresult: {\r\n\t\t\t\t\t\tdata\r\n\t\t\t\t\t}\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\ttestDb.doc(data._id).remove().then(res => {\r\n\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: 'test表内没有数据',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tasync removeAllData2TestDb() {\r\n\t\t\t\tlet index = 1\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: false\r\n\t\t\t\t});\r\n\t\t\t\tlet testDb = db.collection(\"test\")\r\n\t\t\t\tlet {\r\n\t\t\t\t\tresult: {\r\n\t\t\t\t\t\tdata\r\n\t\t\t\t\t}\r\n\t\t\t\t} = await testDb.get()\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tif (data.length) {\r\n\t\t\t\t\t//用一个不存在的条件来删除所有数据\r\n\t\t\t\t\tlet {\r\n\t\t\t\t\t\tresult: {\r\n\t\t\t\t\t\t\tdeleted\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} = await testDb.where('data!=\"不存在的条件\"').remove();\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '成功删除' + deleted + '条数据！',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: 'test表内没有数据',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetData(tableName) {\r\n\t\t\t\tconsole.log(tableName);\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\t// 客户端联表查询\r\n\t\t\t\tdb.collection(tableName)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally((e) => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tasync getOrderByGetTemp() {\r\n\t\t\t\t//当数据表记录数较大时，务必使用本方法\r\n\t\t\t\tuni.showLoading({mask: true});\r\n\t\t\t\tconst orderQuery = db.collection('order').field('book_id,quantity').getTemp()\t// 使用getTemp先过滤处理获取临时表再联表查询\r\n\t\t\t\tconst bookQuery = db.collection('book').field('_id,author,title').getTemp()\r\n\t\t\t\tconst res = await db.collection(orderQuery,bookQuery).field('book_id as books_info,quantity').get()\r\n\t\t\t\tuni.hideLoading()\r\n\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t},\r\n\t\t\tgetOrder() {\r\n\t\t\t\t//直接关联多个表为虚拟表再进行查询。仅数据表字段内容较少时使用，否者将查询超时\r\n\t\t\t\tuni.showLoading({mask: true});\r\n\t\t\t\t// 客户端联表查询\r\n\t\t\t\tdb.collection('order,book') // 注意collection方法内需要传入所有用到的表名，用逗号分隔，主表需要放在第一位\r\n\t\t\t\t\t//.where('book_id.title == \"三国演义\"') // 查询order表内书名为“三国演义”的订单\r\n\t\t\t\t\t.field('book_id{title,author} as books_info,quantity') // 这里联表查询book表返回book表内的title、book表内的author、order表内的quantity\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetOneBook() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\t// 客户端联表查询\r\n\t\t\t\tdb.collection('book')\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetOne: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetBookTitle() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\t// 客户端联表查询\r\n\t\t\t\tdb.collection('book')\r\n\t\t\t\t\t.field('title')\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetBookAs() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\t// 客户端联表查询\r\n\t\t\t\tdb.collection('book')\r\n\t\t\t\t\t.field('title,author as book_author')\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetOrderOrderBy(str) {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\tdb.collection('order')\r\n\t\t\t\t\t.orderBy(str)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetBookHasCount() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\tdb.collection('book')\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\t\"getCount\": true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetTreeFn() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: true\r\n\t\t\t\t});\r\n\t\t\t\tdb.collection(\"opendb-department\").get({\r\n\t\t\t\t\t\tgetTree: {\r\n\t\t\t\t\t\t\tlimitLevel: 10, // 最大查询层级（不包含当前层级），可以省略默认10级，最大15，最小1\r\n\t\t\t\t\t\t\t//\tstartWith: \"parent_code==''\"  // 第一层级条件，此初始条件可以省略，不传startWith时默认从最顶级开始查询\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(\"res: \",res);\r\n\t\t\t\t\t\tconst resdata = res.result.data\r\n\t\t\t\t\t\tthis.$refs.alertCode.open(resdata)\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\t\tcontent: err.message || '请求服务失败',\r\n\t\t\t\t\t\t\tshowCancel: false\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tasync getPageData() {\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\tmask: false\r\n\t\t\t\t});\r\n\t\t\t\tlet res = await db.collection(\"book\")\r\n\t\t\t\t\t.skip((this.pageCurrent - 1) * this.pageSize)\r\n\t\t\t\t\t.limit(this.pageSize)\r\n\t\t\t\t\t.get()\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tthis.$refs.alertCode.open(res.result.data)\r\n\t\t\t\tuni.hideLoading()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.tips {\r\n\t\tcolor: #999999;\r\n\t\tfont-size: 14px;\r\n\t\tpadding: 15px 20px;\r\n\t\tborder: dashed 1px #EEEEEE;\r\n\t\tborder-radius: 5px;\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\twidth: 500rpx;\r\n\t\tmargin: 10px 125rpx;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\t/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 5px;\r\n\t\theight: 5px;\r\n\t\tbackground-color: #fafafa;\r\n\t}\r\n\r\n\t/*定义滚动条轨道 内阴影+圆角*/\r\n\t::-webkit-scrollbar-track {\r\n\t\t-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\r\n\t\tborder-radius: 10px;\r\n\t\tbackground-color: #fafafa;\r\n\t}\r\n\r\n\t/*定义滑块 内阴影+圆角*/\r\n\t::-webkit-scrollbar-thumb {\r\n\t\tborder-radius: 10px;\r\n\t\t-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .1);\r\n\t\tbackground-color: #e1e0ed;\r\n\t}\r\n\r\n\t.item {\r\n\t\tdisplay: flex;\r\n\t\twidth: 750rpx;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: center;\r\n\t\tpadding-top: 20px;\r\n\t\tpadding-left: 36rpx;\r\n\t\tflex-direction: row;\r\n\t}\r\n</style>\r\n","import MiniProgramPage from 'E:/web/cooqi/fjywq/pages/clientDB/clientDB-api/clientDB-api.vue'\nwx.createPage(MiniProgramPage)"],"names":["uniCloud","uni"],"mappings":"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"}